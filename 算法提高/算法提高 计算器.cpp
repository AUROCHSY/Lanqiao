算法提高 计算器
【问题描述】
　　王小二的计算器上面的LED显示屏坏掉了，于是他找到了在计算器维修与应用系学习的你来为他修计算器。
　　屏幕上可以显示0~9的数字，其中每个数字由7个小二极管组成，各个数字对应的表示方式如图所示：

　　。

　　为了排除电路故障，现在你需要计算，将数字A变为数字B需要经过多少次变换？
　　注意：现在将其中每段小二极管的开和关都定义为一次变换。例如数字1变为2是5次操作。

【输入格式】
　　第一行为一个正整数L，表示数码的长度。
　　接下来两行是两个长度为L的数字A和B，表示要把数字A变成数字B（数字可以以0开头）。
【输出格式】
　　一行一个整数，表示这些小二极管一共要变换多少次。
【样例输入1】

　　3
　　101
　　025
【样例输出1】
　　12
【样例输入2】

8
19920513
20111211
【样例输出2】
　　27

【数据范围】
　　L<=100

#include <iostream>
using namespace std;
int main() {
    int a[10][10] = {
        {0, 4, 3, 3, 4, 3, 2, 3, 1, 2},
        {4, 0, 5, 3, 2, 5, 6, 1, 5, 4},
        {3, 5, 0, 2, 5, 4, 3, 4, 2, 3},
        {3, 3, 2, 0, 3, 2, 3, 2, 2, 1},
        {4, 2, 5, 3, 0, 3, 4, 3, 3, 2},
        {3, 5, 4, 2, 3, 0, 1, 4, 2, 1},
        {2, 6, 3, 3, 4, 1, 0, 5, 1, 2},
        {3, 1, 4, 2, 3, 4, 5, 0, 4, 3},
        {1, 5, 2, 2, 3, 2, 1, 4, 0, 1},
        {2, 4, 3, 1, 2, 1, 2, 3, 1, 0}
    };
    int n;
    cin >> n;
    string s, m;
    cin >> s >> m;
    int cnt = 0;
    for(int i = 0; i < n; i++) {
        cnt += a[s[i] - '0'][m[i] - '0'];
    }
    cout << cnt;
    return 0;
}